<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ayigu.blog.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.ayigu.blog.entity.Comment" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="gmt_create" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="gmt_modified" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="content" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ip" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="article_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="is_delete" jdbcType="BIT" javaType="java.lang.Boolean" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, gmt_create, gmt_modified, name, email, content, ip, article_id, is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ayigu.blog.entity.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from blog_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from blog_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from blog_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ayigu.blog.entity.Comment" useGeneratedKeys="true" keyProperty="id" >
    insert into blog_comment (gmt_create, gmt_modified, name, 
      email, content, ip, 
      article_id, is_delete)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{articleId,jdbcType=BIGINT}, #{delete,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.ayigu.blog.entity.Comment" useGeneratedKeys="true" keyProperty="id" >
    insert into blog_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="delete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="delete != null" >
        #{delete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ayigu.blog.entity.Comment" >
    update blog_comment
    <set >
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null" >
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="delete != null" >
        is_delete = #{delete,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ayigu.blog.entity.Comment" >
    update blog_comment
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      article_id = #{articleId,jdbcType=BIGINT},
      is_delete = #{delete,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>